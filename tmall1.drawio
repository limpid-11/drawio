<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36 Edg/126.0.0.0" version="24.7.5">
  <diagram name="第 1 页" id="nSqqlTotFycrfwxX73Ba">
    <mxGraphModel dx="1555" dy="1033" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="o0Hb8o0XORfrBRrqirPu-1" value="&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;源数据处理与分析&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1. 四个初始表格&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="-200" y="-340" width="420" height="140" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-2" value="user_info&lt;div&gt;424 170&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="-200" y="-160" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-3" value="user_log&lt;div&gt;54 925 330&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="-200" y="-80" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-4" value="train_data&lt;div&gt;260 864&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="-200" y="60" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-5" value="test_data&lt;div&gt;261 477&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="-200" y="140" width="120" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-6" value="x = pd.read_csv(&quot;x.csv&quot;)&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;# 读取表格&lt;div&gt;x.head(num)&amp;nbsp; &amp;nbsp;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;# 显示数据&lt;/div&gt;&lt;div&gt;x.info()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;# 显示统计信息&lt;/div&gt;&lt;div&gt;x[a|b].count()&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;# 对符合表达式的条例进行计数ab为条件&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="-200" y="220" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-7" value="age_range" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="140" y="-160" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-8" value="user_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-60" y="-160" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-9" value="user_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-60" y="-80" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-10" value="user_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-60" y="60" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-11" value="gender" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="-160" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-12" value="merchant_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="60" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-13" value="label" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="140" y="60" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-14" value="item_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="-80" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-15" value="item_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="140" y="-80" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-16" value="cat_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-200" y="-20" width="70" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-17" value="seller_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-110" y="-20" width="70" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-18" value="brand_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-20" y="-20" width="60" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-19" value="time_stamp" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="60" y="-20" width="70" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-20" value="action_type" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="150" y="-20" width="70" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-21" value="user_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-60" y="140" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-22" value="merchant_id" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="140" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-23" value="prob" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
          <mxGeometry x="140" y="140" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="o0Hb8o0XORfrBRrqirPu-24" value="方案一：&lt;div&gt;1.数据预处理（处理缺失值，info和log融合，train和test融合）&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="-200" y="370" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="mdK-gjrSaaRjYnedtXAf-1" value="&lt;div&gt;import gc&lt;/div&gt;&lt;div&gt;import pandas as pd&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 读取文件&lt;/div&gt;&lt;div&gt;paths = &#39;data/data_format1&#39;&lt;/div&gt;&lt;div&gt;data = pd.read_csv(f&#39;{paths}/user_log_format1.csv&#39;, dtype={&#39;time_stamp&#39;: &#39;str&#39;})&lt;/div&gt;&lt;div&gt;data1 = pd.read_csv(f&#39;{paths}/user_info_format1.csv&#39;)&lt;/div&gt;&lt;div&gt;data2 = pd.read_csv(f&#39;{paths}/train_format1.csv&#39;)&lt;/div&gt;&lt;div&gt;submission = pd.read_csv(f&#39;{paths}/test_format1.csv&#39;)&lt;/div&gt;&lt;div&gt;data_train = pd.read_csv(&#39;data/data_format2/train_format2.csv&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;data2[&#39;origin&#39;] = &#39;train&#39;&lt;/div&gt;&lt;div&gt;submission[&#39;origin&#39;] = &#39;test&#39;&lt;/div&gt;&lt;div&gt;matrix = pd.concat([data2, submission], ignore_index=True, sort=False)&lt;/div&gt;&lt;div&gt;matrix.drop([&#39;prob&#39;], axis=1, inplace=True)&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(data1, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;data.rename(columns={&#39;seller_id&#39;: &#39;merchant_id&#39;}, inplace=True)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 处理日志数据&lt;/div&gt;&lt;div&gt;data[&#39;user_id&#39;] = data[&#39;user_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;data[&#39;merchant_id&#39;] = data[&#39;merchant_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;data[&#39;item_id&#39;] = data[&#39;item_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;data[&#39;cat_id&#39;] = data[&#39;cat_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;data[&#39;brand_id&#39;] = data[&#39;brand_id&#39;].fillna(0)&lt;/div&gt;&lt;div&gt;data[&#39;brand_id&#39;] = data[&#39;brand_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;data[&#39;time_stamp&#39;] = pd.to_datetime(data[&#39;time_stamp&#39;], format=&#39;%H%M&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 矩阵的主键是 user_id--merchant_id&lt;/div&gt;&lt;div&gt;matrix[&#39;age_range&#39;] = matrix[&#39;age_range&#39;].fillna(0)&lt;/div&gt;&lt;div&gt;matrix[&#39;gender&#39;] = matrix[&#39;gender&#39;].fillna(2)&lt;/div&gt;&lt;div&gt;matrix[&#39;age_range&#39;] = matrix[&#39;age_range&#39;].astype(&#39;int8&#39;)&lt;/div&gt;&lt;div&gt;matrix[&#39;gender&#39;] = matrix[&#39;gender&#39;].astype(&#39;int8&#39;)&lt;/div&gt;&lt;div&gt;matrix[&#39;label&#39;] = matrix[&#39;label&#39;].astype(&#39;str&#39;)&lt;/div&gt;&lt;div&gt;matrix[&#39;user_id&#39;] = matrix[&#39;user_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;matrix[&#39;merchant_id&#39;] = matrix[&#39;merchant_id&#39;].astype(&#39;int32&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;del data1, data2&lt;/div&gt;&lt;div&gt;gc.collect()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 特征处理&lt;/div&gt;&lt;div&gt;groups = data.groupby([&#39;user_id&#39;])&lt;/div&gt;&lt;div&gt;temp = groups.size().reset_index().rename(columns={0:&#39;u1&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;item_id&#39;].agg([(&#39;u2&#39;, &#39;nunique&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;cat_id&#39;].agg([(&#39;u3&#39;, &#39;nunique&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;merchant_id&#39;].agg([(&#39;u4&#39;, &#39;nunique&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;brand_id&#39;].agg([(&#39;u5&#39;, &#39;nunique&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;time_stamp&#39;].agg([(&#39;F_time&#39;, &#39;min&#39;), (&#39;L_time&#39;, &#39;max&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;temp[&#39;u6&#39;] = (temp[&#39;L_time&#39;] - temp[&#39;F_time&#39;]).dt.seconds/3600&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp[[&#39;user_id&#39;, &#39;u6&#39;]], on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;action_type&#39;].value_counts().unstack().reset_index().rename(columns={0:&#39;u7&#39;, 1:&#39;u8&#39;, 2:&#39;u9&#39;, 3:&#39;u10&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;user_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 特征 m6 m7 m8 m9&lt;/div&gt;&lt;div&gt;groups = data.groupby([&#39;merchant_id&#39;])&lt;/div&gt;&lt;div&gt;temp = groups.size().reset_index().rename(columns={0:&#39;m1&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;merchant_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;user_id&#39;, &#39;item_id&#39;, &#39;cat_id&#39;, &#39;brand_id&#39;].nunique().reset_index().rename(columns={&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;user_id&#39;:&#39;m2&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;item_id&#39;:&#39;m3&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;cat_id&#39;:&#39;m4&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;brand_id&#39;:&#39;m5&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;merchant_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;action_type&#39;].value_counts().unstack().reset_index().rename(columns={0:&#39;m6&#39;, 1:&#39;m7&#39;, 2:&#39;m8&#39;, 3:&#39;m9&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;merchant_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 第十个特征&lt;/div&gt;&lt;div&gt;temp = data_train[data_train[&#39;label&#39;]==1].groupby([&#39;merchant_id&#39;]).size().reset_index().rename(columns={0:&#39;m10&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=&#39;merchant_id&#39;, how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 提取特征&lt;/div&gt;&lt;div&gt;groups = data.groupby([&#39;user_id&#39;, &#39;merchant_id&#39;])&lt;/div&gt;&lt;div&gt;temp = groups.size().reset_index().rename(columns={0:&#39;um1&#39;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=[&#39;user_id&#39;, &#39;merchant_id&#39;], how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;item_id&#39;, &#39;cat_id&#39;, &#39;brand_id&#39;].nunique().reset_index().rename(columns={&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;item_id&#39;:&#39;um2&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;cat_id&#39;:&#39;um3&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &#39;brand_id&#39;:&#39;um4&#39;&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=[&#39;user_id&#39;, &#39;merchant_id&#39;], how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;action_type&#39;].value_counts().unstack().reset_index().rename(columns={&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 0:&#39;um5&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 1:&#39;um6&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 2:&#39;um7&#39;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 3:&#39;um8&#39;&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=[&#39;user_id&#39;, &#39;merchant_id&#39;], how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;temp = groups[&#39;time_stamp&#39;].agg([(&#39;frist&#39;, &#39;min&#39;), (&#39;last&#39;, &#39;max&#39;)]).reset_index()&lt;/div&gt;&lt;div&gt;temp[&#39;um9&#39;] = (temp[&#39;last&#39;] - temp[&#39;frist&#39;]).dt.seconds/3600&lt;/div&gt;&lt;div&gt;temp.drop([&#39;frist&#39;, &#39;last&#39;], axis=1, inplace=True)&lt;/div&gt;&lt;div&gt;matrix = matrix.merge(temp, on=[&#39;user_id&#39;, &#39;merchant_id&#39;], how=&#39;left&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 购买点击比&lt;/div&gt;&lt;div&gt;matrix[&#39;r1&#39;] = matrix[&#39;u9&#39;]/matrix[&#39;u7&#39;] #用户购买点击比&lt;/div&gt;&lt;div&gt;matrix[&#39;r2&#39;] = matrix[&#39;m8&#39;]/matrix[&#39;m6&#39;] #商家购买点击比&lt;/div&gt;&lt;div&gt;matrix[&#39;r3&#39;] = matrix[&#39;um7&#39;]/matrix[&#39;um5&#39;] #不同用户不同商家购买点击比&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 填零&lt;/div&gt;&lt;div&gt;matrix.fillna(0, inplace=True)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# ？&lt;/div&gt;&lt;div&gt;temp = pd.get_dummies(matrix[&#39;age_range&#39;], prefix=&#39;age&#39;)&lt;/div&gt;&lt;div&gt;matrix = pd.concat([matrix, temp], axis=1)&lt;/div&gt;&lt;div&gt;temp = pd.get_dummies(matrix[&#39;gender&#39;], prefix=&#39;g&#39;)&lt;/div&gt;&lt;div&gt;matrix = pd.concat([matrix, temp], axis=1)&lt;/div&gt;&lt;div&gt;matrix.drop([&#39;age_range&#39;, &#39;gender&#39;], axis=1, inplace=True)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# train test setdata&lt;/div&gt;&lt;div&gt;train_data = matrix[matrix[&#39;origin&#39;] == &#39;train&#39;].drop([&#39;origin&#39;], axis=1)&lt;/div&gt;&lt;div&gt;test_data = matrix[matrix[&#39;origin&#39;] == &#39;test&#39;].drop([&#39;label&#39;, &#39;origin&#39;], axis=1)&lt;/div&gt;&lt;div&gt;train_X, train_y = train_data.drop([&#39;label&#39;], axis=1), train_data[&#39;label&#39;]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;del temp, matrix&lt;/div&gt;&lt;div&gt;gc.collect()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;train_X.to_csv(&quot;ex1/train_X.csv&quot;)&lt;/div&gt;&lt;div&gt;train_y.to_csv(&quot;ex1/train_y.csv&quot;)&lt;/div&gt;&lt;div&gt;test_data.to_csv(&quot;ex1/test_data.csv&quot;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;spacingLeft=4;" vertex="1" parent="1">
          <mxGeometry x="-200" y="510" width="420" height="1850" as="geometry" />
        </mxCell>
        <mxCell id="mdK-gjrSaaRjYnedtXAf-3" value="&lt;div&gt;&lt;div&gt;from sklearn.model_selection import train_test_split&lt;/div&gt;&lt;div&gt;from sklearn.ensemble import RandomForestClassifier&lt;/div&gt;&lt;div&gt;from sklearn.linear_model import LinearRegression&lt;/div&gt;&lt;div&gt;from sklearn.metrics import classification_report&lt;/div&gt;&lt;div&gt;import xgboost as xgb&lt;/div&gt;&lt;div&gt;import pandas as pd&lt;/div&gt;&lt;div&gt;from sklearn.preprocessing import LabelEncoder&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;train_X = pd.read_csv(&quot;ex1/train_X.csv&quot;)&lt;/div&gt;&lt;div&gt;train_y = pd.read_csv(&quot;ex1/train_y.csv&quot;)&lt;/div&gt;&lt;div&gt;test_data = pd.read_csv(&quot;ex1/test_data.csv&quot;)&lt;/div&gt;&lt;div&gt;submission = pd.read_csv(f&#39;data/data_format1/test_format1.csv&#39;)&lt;/div&gt;&lt;div&gt;submission[&#39;origin&#39;] = &#39;test&#39;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;X_train, X_valid, y_train, y_valid = train_test_split(train_X, train_y, test_size=.3)&lt;/div&gt;&lt;div&gt;le = LabelEncoder()&lt;/div&gt;&lt;div&gt;y_train = le.fit_transform(y_train)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# 随机森林预测&lt;/div&gt;&lt;div&gt;rf_clf = RandomForestClassifier(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; oob_score=True,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; n_jobs=-1,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; n_estimators=1000,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; max_depth=10,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; max_features=&#39;sqrt&#39;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;rf_clf.fit(X_train, y_train)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;prob = rf_clf.predict_proba(test_data)&lt;/div&gt;&lt;div&gt;submission[&#39;prob&#39;] = pd.Series(prob[:, 1])&lt;/div&gt;&lt;div&gt;submission.drop([&#39;origin&#39;], axis=1, inplace=True)&lt;/div&gt;&lt;div&gt;submission.to_csv(&#39;submission1.csv&#39;, index=False)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;# Xgboost预测&lt;/div&gt;&lt;div&gt;model = xgb.XGBClassifier(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; max_depth=8,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; n_estimators=1000,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; min_child_weight=300,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; colsample_bytree=0.8,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; subsample=0.8,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; eta=0.3,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; seed=42&lt;/div&gt;&lt;div&gt;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;model.fit(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; X_train,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; y_train,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; # eval_metric=[&#39;auc&#39;],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; eval_set=[(X_train, y_train), (X_valid, y_valid)],&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; verbose=True,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; # early_stopping_rounds=10&lt;/div&gt;&lt;div&gt;)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;prob = model.predict_proba(test_data)&lt;/div&gt;&lt;div&gt;submission[&#39;prob&#39;] = pd.Series(prob[:, 1])&lt;/div&gt;&lt;div&gt;submission.to_csv(&#39;submission.csv&#39;, index=False)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;verticalAlign=top;spacingLeft=4;" vertex="1" parent="1">
          <mxGeometry x="-200" y="2380" width="420" height="840" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
